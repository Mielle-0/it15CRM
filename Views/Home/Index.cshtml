@{
    ViewData["Title"] = "Home Page";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Portal</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #6f42c1;
            --light-color: #f8f9fc;
            --dark-color: #5a5c69;
        }
        
        body {
            background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c, #4facfe, #00f2fe);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            position: relative;
            overflow: hidden;
        }
        
        @@keyframes gradientShift {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }
        
        /* Floating shapes background */
        .bg-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
        }
        
        .shape {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 20s infinite linear;
        }
        
        .shape:nth-child(1) {
            width: 80px;
            height: 80px;
            top: 20%;
            left: 10%;
            animation-duration: 25s;
            animation-delay: 0s;
        }
        
        .shape:nth-child(2) {
            width: 120px;
            height: 120px;
            top: 60%;
            left: 80%;
            animation-duration: 30s;
            animation-delay: 5s;
        }
        
        .shape:nth-child(3) {
            width: 60px;
            height: 60px;
            top: 80%;
            left: 20%;
            animation-duration: 20s;
            animation-delay: 10s;
        }
        
        .shape:nth-child(4) {
            width: 100px;
            height: 100px;
            top: 10%;
            left: 70%;
            animation-duration: 35s;
            animation-delay: 2s;
        }
        
        .shape:nth-child(5) {
            width: 40px;
            height: 40px;
            top: 40%;
            left: 5%;
            animation-duration: 18s;
            animation-delay: 8s;
        }
        
        .shape:nth-child(6) {
            width: 90px;
            height: 90px;
            top: 70%;
            left: 60%;
            animation-duration: 28s;
            animation-delay: 12s;
        }
        
        @@keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.7;
            }
            50% {
                transform: translateY(-20px) rotate(180deg);
                opacity: 0.3;
            }
        }
        
        /* Particle effect */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
        
        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            animation: particleFloat 15s infinite linear;
        }
        
        @@keyframes particleFloat {
            0% {
                transform: translateY(100vh) scale(0);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-10px) scale(1);
                opacity: 0;
            }
        }
        
        .auth-container {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1), 0 15px 12px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 500px;
            position: relative;
            z-index: 10;
        }
        
        .auth-header {
            background: linear-gradient(135deg, rgba(78, 115, 223, 0.9) 0%, rgba(111, 66, 193, 0.9) 100%);
            color: white;
            padding: 40px 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .auth-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            animation: shimmer 3s infinite;
        }
        
        .auth-header h2 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            position: relative;
            z-index: 2;
        }
        
        .auth-header p {
            font-size: 16px;
            opacity: 0.9;
            position: relative;
            z-index: 2;
        }
        
        @@keyframes shimmer {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
        }
        
        .auth-form-container {
            padding: 40px 30px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }
        
        .form-title {
            margin-bottom: 30px;
            color: rgba(78, 115, 223, 0.9);
            font-weight: 700;
            text-align: center;
            font-size: 24px;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        }
        
        .form-group {
            margin-bottom: 25px;
            position: relative;
        }
        
        .form-label {
            font-weight: 600;
            margin-bottom: 8px;
            color: rgba(90, 92, 105, 0.9);
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .form-control {
            background: rgba(255, 255, 255, 0.9);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 12px;
            padding: 15px 20px;
            font-size: 16px;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }
        
        .form-control:focus {
            background: rgba(255, 255, 255, 0.95);
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(78, 115, 223, 0.1), 0 4px 12px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }
        
        .form-control::placeholder {
            color: rgba(90, 92, 105, 0.6);
            font-style: italic;
        }
        
        .input-group {
            position: relative;
        }
        
        .input-group-text {
            background: rgba(255, 255, 255, 0.9);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-left: none;
            border-radius: 0 12px 12px 0;
            color: var(--primary-color);
            transition: all 0.3s ease;
        }
        
        .input-group .form-control {
            border-radius: 12px 0 0 12px;
            border-right: none;
        }
        
        .input-group:focus-within .input-group-text {
            background: rgba(255, 255, 255, 0.95);
            border-color: var(--primary-color);
            color: var(--primary-color);
        }
        
        .password-toggle {
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 0 15px;
        }
        
        .password-toggle:hover {
            color: var(--secondary-color);
            transform: scale(1.1);
        }
        
        .form-check {
            margin: 20px 0;
        }
        
        .form-check-input {
            border-radius: 6px;
            border: 2px solid rgba(255, 255, 255, 0.4);
            background: rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }
        
        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .form-check-label {
            color: rgba(90, 92, 105, 0.9);
            font-weight: 500;
            margin-left: 8px;
        }
        
        .btn-auth {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            border: none;
            padding: 15px 20px;
            font-weight: 600;
            color: white;
            width: 100%;
            margin-top: 20px;
            border-radius: 12px;
            font-size: 16px;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .btn-auth::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }
        
        .btn-auth:hover::before {
            left: 100%;
        }
        
        .btn-auth:hover {
            background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(78, 115, 223, 0.3);
        }
        
        .btn-auth:active {
            transform: translateY(0);
        }
        
        .social-auth {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e3e6f0;
        }
        
        .social-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin: 0 5px;
            color: white;
            text-decoration: none;
        }
        
        .fb { background-color: #3b5998; }
        .google { background-color: #dd4b39; }
        .twitter { background-color: #1da1f2; }
        
        .help-links {
            text-align: center;
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .help-links a {
            color: rgba(78, 115, 223, 0.8);
            text-decoration: none;
            margin: 0 15px;
            font-weight: 500;
            font-size: 14px;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .help-links a::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -3px;
            left: 50%;
            background: var(--primary-color);
            transition: all 0.3s ease;
        }
        
        .help-links a:hover {
            color: var(--primary-color);
            transform: translateY(-1px);
        }
        
        .help-links a:hover::after {
            width: 100%;
            left: 0;
        }
        
        /* reCAPTCHA styling */
        .g-recaptcha {
            margin: 20px 0;
            transform: scale(0.9);
            transform-origin: left center;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        /* Loading animation */
        .btn-auth.loading {
            pointer-events: none;
            position: relative;
        }
        
        .btn-auth.loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin-left: -10px;
            margin-top: -10px;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Notification styles */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            transform: translateX(400px);
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.success {
            background: linear-gradient(135deg, #10b981, #059669);
        }
        
        .notification.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }
        
        /* Input focus animations */
        .form-group {
            position: relative;
        }
        
        .form-label.active {
            color: var(--primary-color);
            transform: translateY(-2px);
        }
        
        /* Responsive improvements */
        @@media (max-width: 576px) {
            .auth-container {
                margin: 10px;
                max-width: none;
            }
            
            .auth-header {
                padding: 30px 20px;
            }
            
            .auth-form-container {
                padding: 30px 20px;
            }
            
            .g-recaptcha {
                transform: scale(0.8);
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="bg-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    
    <!-- Particle Effect -->
    <div class="particles" id="particles"></div>
    
    <div class="auth-container">
        <div class="auth-header">
            <h2>Welcome to Our CRM</h2>
            <p class="mb-0">Sign in to access your account</p>
        </div>
        
        <div class="auth-form-container">
            <!-- Login Form -->
            <form id="login-form" class="auth-form">
                <h3 class="form-title">Login to Your Account</h3>
                
                <div class="form-group">
                    <label for="login-username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="login-username" placeholder="Enter your username" required>
                </div>
                
                <div class="form-group">
                    <label for="login-password" class="form-label">Password</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="login-password" placeholder="Enter your password" required>
                        <span class="input-group-text password-toggle">
                            <i class="fas fa-eye"></i>
                        </span>
                    </div>
                </div>
                
                <div class="form-group form-check">
                    <input type="checkbox" class="form-check-input" id="remember-me">
                    <label class="form-check-label" for="remember-me">Remember me</label>
                </div>

                <div class="form-group">
                    <div class="g-recaptcha" data-sitekey="6LcnlNsrAAAAAE41c4YITC_nxcyo25xCuM8H6cAW"></div>
                </div>

                
                <button type="submit" class="btn btn-auth">Login</button>
                
                <div class="help-links">
                    <a href="#">Forgot Password?</a>
                    <a href="#">Contact Support</a>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Create floating particles
            function createParticles() {
                const particlesContainer = document.getElementById('particles');
                const numberOfParticles = 50;
                
                for (let i = 0; i < numberOfParticles; i++) {
                    const particle = document.createElement('div');
                    particle.className = 'particle';
                    particle.style.left = Math.random() * 100 + '%';
                    particle.style.animationDelay = Math.random() * 15 + 's';
                    particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                    particlesContainer.appendChild(particle);
                }
            }
            
            createParticles();

            if (localStorage.getItem("jwt")) {
                window.location.href = "/dashboard";
            }
            // Password visibility toggle
            const passwordToggle = document.querySelector('.password-toggle');
            passwordToggle.addEventListener('click', function() {
                const input = this.parentElement.querySelector('input');
                const icon = this.querySelector('i');
                
                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    input.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            });
            
            // Enhanced form interactions
            const formInputs = document.querySelectorAll('.form-control');
            formInputs.forEach(input => {
                const label = input.parentElement.parentElement.querySelector('.form-label');
                
                input.addEventListener('focus', function() {
                    if (label) label.classList.add('active');
                    this.parentElement.style.transform = 'translateY(-2px)';
                });
                
                input.addEventListener('blur', function() {
                    if (label && !this.value) label.classList.remove('active');
                    this.parentElement.style.transform = 'translateY(0)';
                });
                
                // Typing animation effect
                input.addEventListener('input', function() {
                    this.style.borderColor = this.value ? 'var(--primary-color)' : '';
                });
            });
            
            // Form submission
            document.getElementById('login-form').addEventListener('submit', async function(e) {
                e.preventDefault();

                const email = document.getElementById('login-username').value;
                const password = document.getElementById('login-password').value;
                const submitBtn = this.querySelector('.btn-auth');
                const originalText = submitBtn.textContent;
                
                // Get captcha response
                const responseToken = grecaptcha.getResponse();
                console.log('Captcha response token:', responseToken ? 'Present' : 'Missing');
                
                if (!responseToken) {
                    showNotification("Please complete the CAPTCHA.", "error");
                    return;
                }

                // Add loading state
                submitBtn.classList.add('loading');
                submitBtn.textContent = 'Signing In...';
                submitBtn.disabled = true;

                try {
                    console.log('Sending login request...');
                    const response = await fetch('/api/auth/login', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email, password, captchaToken: responseToken })
                    });

                    if (response.ok) {
                        const result = await response.json();
                        console.log('Login successful');

                        // Save the JWT in localStorage
                        localStorage.setItem("jwt", result.token);

                        // Show success message
                        showNotification("Login successful! Redirecting...", "success");
                        
                        // Redirect after a short delay
                        setTimeout(() => {
                            window.location.href = "/dashboard";
                        }, 1000);
                    } else {
                        const errorText = await response.text();
                        console.error('Login failed:', errorText);
                        showNotification("Login failed: " + errorText, "error");
                        // Reset captcha
                        grecaptcha.reset();
                    }
                } catch (error) {
                    console.error('Request error:', error);
                    showNotification("Something went wrong. Please try again.", "error");
                    // Reset captcha
                    grecaptcha.reset();
                } finally {
                    // Remove loading state
                    submitBtn.classList.remove('loading');
                    submitBtn.textContent = originalText;
                    submitBtn.disabled = false;
                }
            });

            // Notification system
            function showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.textContent = message;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.classList.add('show');
                }, 100);
                
                setTimeout(() => {
                    notification.classList.remove('show');
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 3000);
            }

        });

    </script>
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>

</body>
</html>