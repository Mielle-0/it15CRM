@model dynamic
@using System.Text.Json
@{
    ViewData["Title"] = "Sentiment Trends";

    // Serialize labels
    var labelsJson = JsonSerializer.Serialize(Model.Labels);

    // Build datasets server-side to avoid Razor parsing issues
    var colorPalette = new[] {
        "rgb(31,119,180)",
        "rgb(255,127,14)",
        "rgb(44,160,44)",
        "rgb(214,39,40)",
        "rgb(148,103,189)"
    };

    var datasets = new List<object>();
    int idx = 0;
    foreach (var game in Model.Games)
    {
        datasets.Add(new
        {
            label = game.Name,
            data = game.Sentiments,
            borderColor = colorPalette[idx % colorPalette.Length],
            fill = false,
            borderWidth = 2,
            tension = 0.3
        });
        idx++;
    }

    var datasetsJson = JsonSerializer.Serialize(datasets);
}

<div class="container-fluid">

    <!-- Filters + Search -->
    <div class="card mb-4 shadow-sm border-0 rounded-3">
        <div class="card-body">
            <form class="row g-3 align-items-end" method="get" asp-action="Index">

                <!-- Search App Name -->
                <div class="col-md-3">
                    <label class="form-label">App Name</label>
                    <input type="text"
                        class="form-control"
                        name="searchApp"
                        value="@Context.Request.Query["searchApp"]"
                        placeholder="Search by app name..." />
                </div>

                <!-- Date Range -->
                <div class="col-md-3">
                    <label class="form-label">Start Date</label>
                    <input type="month"
                        class="form-control"
                        name="startDate"
                        value="@Context.Request.Query["startDate"]" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">End Date</label>
                    <input type="month"
                        class="form-control"
                        name="endDate"
                        value="@Context.Request.Query["endDate"]" />
                </div>

                <!-- Sentiment Range Slider -->
                <div class="col-md-3">
                    <label class="form-label">Min Sentiment</label>
                    <input type="range"
                        class="form-range"
                        name="minSentiment"
                        min="0" max="1" step="0.05"
                        value="@Context.Request.Query["minSentiment"].FirstOrDefault() ?? "0""
                        oninput="this.nextElementSibling.value = this.value" />
                    <output>@(Context.Request.Query["minSentiment"].FirstOrDefault() ?? "0")</output>
                </div>

                <!-- Review Count Filter -->
                <div class="col-md-3">
                    <label class="form-label">Min Reviews</label>
                    <input type="number"
                        class="form-control"
                        name="minReviews"
                        value="@Context.Request.Query["minReviews"].FirstOrDefault() ?? "0""
                        min="0" />
                </div>

                <!-- Submit Button -->
                <div class="col-md-2 text-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fa fa-search"></i> Filter
                    </button>
                </div>
            </form>
        </div>
    </div>


    <!-- Chart Card -->
    <div class="card shadow-sm border-0 rounded-3 mb-4">
        <div class="card-body">
            <canvas id="sentimentTrendsChart" height="120"></canvas>
        </div>
    </div>

    <!-- Anomalies Section -->
    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-body">
            <h5 class="fw-semibold mb-3">⚠️ Detected Anomalies</h5>
            <ul class="list-group list-group-flush">
                @foreach (var anomaly in Model.Anomalies)
                {
                    <li class="list-group-item">
                        <strong>@anomaly.Game</strong> - @anomaly.Month:
                        <span class="text-danger fw-bold">@anomaly.Value</span>
                        <em> (@anomaly.Note)</em>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('sentimentTrendsChart').getContext('2d');

    const sentimentTrendsChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(labelsJson),
            datasets: @Html.Raw(datasetsJson)
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                tooltip: {
                    callbacks: {
                        label: function (context) {
                            return context.dataset.label + ': ' + (context.parsed.y * 100).toFixed(1) + '% sentiment';
                        }
                    }
                }
            },
            scales: {
                y: {
                    min: 0,
                    max: 1,
                    ticks: {
                        callback: function (value) {
                            return (value * 100) + '%';
                        }
                    }
                }
            }
        }
    });
</script>
