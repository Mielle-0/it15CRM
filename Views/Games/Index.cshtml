@model PagedResult<ViewGameList>
@{
    ViewData["Title"] = "Game List";
}

<div class="container-fluid">
    
    <!-- Filters + Search -->
    <div class="card mb-4 shadow-sm border-0 rounded-3">
        <div class="card-body">
            <form class="row g-3" method="get" asp-action="Index">
                <div class="col-md-4">
                    <input type="text" 
                        class="form-control" 
                        name="searchTerm"
                        value="@Context.Request.Query["searchTerm"]"
                        placeholder="Search by reviewer or keyword..." />
                </div>
                <div class="col-md-2">
                    <select class="form-select" name="sentiment">
                        <option value="">Sentiment</option>
                        <option value="Positive" selected="@(Context.Request.Query["sentiment"] == "Positive")">Positive</option>
                        <option value="Neutral" selected="@(Context.Request.Query["sentiment"] == "Neutral")">Neutral</option>
                        <option value="Negative" selected="@(Context.Request.Query["sentiment"] == "Negative")">Negative</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <input type="date" 
                        class="form-control" 
                        name="date"
                        value="@Context.Request.Query["date"]" />
                </div>
                <div class="col-md-2 text-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fa fa-search"></i> Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Games Table -->
    <div class="card shadow-sm border-0">
        <div class="card-body">
            
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="card-title fw-semibold mb-0">Games Overview</h5>
                <a asp-action="Create" data-bs-toggle="ajax-modal" 
                class="btn btn-success">
                    Add Game
                </a>
            </div>

            <div class="table-responsive">
                <table class="table table-hover table-bordered align-middle" id="gamesTable">
                    <thead class="table-light">
                        <tr>
                            <th onclick="sortTable(0)">App ID</th>
                            <th onclick="sortTable(1)">Game</th>
                            <th>Genre</th>
                            <th>Publisher</th>
                            <th onclick="sortTable(3)">Avg. Sentiment</th>
                            <th onclick="sortTable(6)">Total Reviews</th>
                            <th>Release Date</th>
                            <th class="text-end">Actions</th>

                            
                        </tr>
                    </thead>
                    <tbody>   
                        @foreach (var game in Model.Items)
                        {
                            <tr>
                                <td>@game.AppId</td>
                                <td>@game.AppName</td>
                                <td>@game.Genre</td>
                                <td>@game.Publisher</td>
                                <td class="text-center">
                                    @if (game.ReviewCount == 0)
                                        {
                                            <span class="badge bg-secondary">N/A</span>
                                        }
                                        else if (game.AvgSentiment >= 0.3m) 
                                        {
                                            <span class="badge bg-success">Positive (@game.AvgSentiment.ToString("0.00"))</span>
                                        }
                                        else if (game.AvgSentiment <= -0.3m) 
                                        {
                                            <span class="badge bg-danger">Negative (@game.AvgSentiment.ToString("0.00"))</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">Neutral (@game.AvgSentiment.ToString("0.00"))</span>
                                        }
                                </td>
                                <td class="text-center">@game.ReviewCount</td>
                                <td>@game.ReleaseDate?.ToString("yyyy-MM-dd")</td>
                                <td class="text-end">
                                    <a asp-action="Details" asp-route-id="@game.GameId"
                                    data-bs-toggle="ajax-modal"
                                    class="btn btn-sm btn-outline-primary">
                                        View
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@game.GameId"
                                    data-bs-toggle="ajax-modal"
                                    class="btn btn-sm btn-outline-warning ms-2">
                                        Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@game.GameId"
                                    data-bs-toggle="ajax-modal"
                                    class="btn btn-danger btn-sm">
                                    Delete
                                    </a>

                                

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>    
        </div>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" 
                    asp-route-page="@(Model.PageNumber - 1)"
                    asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                    asp-route-sentiment="@Context.Request.Query["sentiment"]"
                    asp-route-date="@Context.Request.Query["date"]">Previous</a>
                </li>
            }

            @{
                var totalPages = (int)Math.Ceiling((decimal)Model.TotalItems / Model.PageSize);
                var startPage = Math.Max(1, Model.PageNumber - 2);
                var endPage = Math.Min(totalPages, Model.PageNumber + 2);

                // Ensure we always show 5 pages if possible
                if (endPage - startPage < 4)
                {
                    if (startPage == 1)
                    {
                        endPage = Math.Min(5, totalPages);
                    }
                    else if (endPage == totalPages)
                    {
                        startPage = Math.Max(1, totalPages - 4);
                    }
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i"
                    asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                    asp-route-sentiment="@Context.Request.Query["sentiment"]"
                    asp-route-date="@Context.Request.Query["date"]">@i</a>
                </li>
            }


            @if (Model.PageNumber < Math.Ceiling((decimal)Model.TotalItems / Model.PageSize))
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)"
                    asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                    asp-route-sentiment="@Context.Request.Query["sentiment"]"
                    asp-route-date="@Context.Request.Query["date"]">Next</a>
                </li>
            }
        </ul>
    </nav>

</div>

<!-- Modal Container -->
<div class="modal fade" id="modalContainer" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content"></div>
    </div>
</div>

@section Scripts {
<script>
    // Simple table sorter
    function sortTable(n) {
        var table = document.getElementById("gamesTable");
        var switching = true, dir = "asc", switchcount = 0;

        while (switching) {
            switching = false;
            var rows = table.rows;
            for (var i = 1; i < (rows.length - 1); i++) {
                var shouldSwitch = false;
                var x = rows[i].getElementsByTagName("TD")[n];
                var y = rows[i + 1].getElementsByTagName("TD")[n];
                var cmpX = isNaN(parseFloat(x.innerText)) ? x.innerText.toLowerCase() : parseFloat(x.innerText);
                var cmpY = isNaN(parseFloat(y.innerText)) ? y.innerText.toLowerCase() : parseFloat(y.innerText);

                if ((dir === "asc" && cmpX > cmpY) || (dir === "desc" && cmpX < cmpY)) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount === 0 && dir === "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    $(document).on("click", "[data-bs-toggle='ajax-modal']", function (e) {
        e.preventDefault();
        var url = $(this).attr("href");
        $.get(url).done(function (data) {
            $("#modalContainer .modal-content").html(data);
            var modal = new bootstrap.Modal(document.getElementById("modalContainer"));
            modal.show();
        });
    });    

    $(document).on("submit", "#modalContainer form", function(e) {
        e.preventDefault();
        var form = $(this);

        $.ajax({
            type: form.attr("method"),
            url: form.attr("action"),
            data: form.serialize(),
            success: function(response) {
                if (response.success) {
                    var modalEl = document.getElementById("modalContainer");
                    var modal = bootstrap.Modal.getInstance(modalEl);
                    modal.hide();
                    location.reload(); // refresh table after create
                } else {
                    // Validation errors: reload modal content
                    $("#modalContainer .modal-content").html(response);
                }
                console.log(response);
            },
            error: function() {
                alert("Error saving game.");
            }
        });
    });



</script>
}