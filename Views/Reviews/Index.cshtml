@model IEnumerable<ReviewOverview>
@{
    ViewData["Title"] = "Review Explorer";
}

<div class="container my-4">
    <!-- Reviews Header -->
    <div class="dashboard-header mb-5">
        <div class="dashboard-content">
            <div class="dashboard-text">
                <div class="dashboard-icon-wrapper">
                    <i class="fas fa-star dashboard-main-icon"></i>
                </div>
                <div>
                    <h1 class="dashboard-title mb-2">Reviews Management</h1>
                    <div class="dashboard-highlights mb-3">
                        <span class="highlight-item">
                            <i class="fas fa-comments highlight-icon"></i>
                            <span>Review Analysis</span>
                        </span>
                        <span class="highlight-item">
                            <i class="fas fa-chart-pie highlight-icon"></i>
                            <span>Sentiment Tracking</span>
                        </span>
                        <span class="highlight-item">
                            <i class="fas fa-brain highlight-icon"></i>
                            <span>AI Insights</span>
                        </span>
                        <span class="highlight-item">
                            <i class="fas fa-search highlight-icon"></i>
                            <span>Smart Search</span>
                        </span>
                    </div>
                    <div class="dashboard-stats">
                        <span class="stat-item">
                            <i class="fas fa-star me-1"></i>
                            Total reviews: <strong>@Model.Count()</strong>
                        </span>
                        <span class="stat-divider">â€¢</span>
                        <span class="stat-item">
                            <i class="fas fa-clock me-1"></i>
                            Last updated: <strong>Just now</strong>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Floating decorative elements -->
        <div class="dashboard-decoration">
            <div class="floating-shape shape-1"></div>
            <div class="floating-shape shape-2"></div>
            <div class="floating-shape shape-3"></div>
        </div>
    </div>

    <!-- Filters + Search -->
    <div class="modern-card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-filter me-2"></i>
                Search & Filter Reviews
            </h5>
        </div>
        <div class="card-body">
            <form class="row g-3" method="get" asp-action="Index">
                <div class="col-md-4">
                    <label class="form-label">Search Reviews</label>
                    <input type="text" 
                        class="form-control modern-input" 
                        name="searchTerm"
                        value="@Context.Request.Query["searchTerm"]"
                        placeholder="Search by reviewer or keyword..." />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Sentiment</label>
                    <select class="form-select modern-input" name="sentiment">
                        <option value="">All Sentiments</option>
                        <option value="Positive" selected="@(Context.Request.Query["sentiment"] == "Positive")">Positive</option>
                        <option value="Neutral" selected="@(Context.Request.Query["sentiment"] == "Neutral")">Neutral</option>
                        <option value="Negative" selected="@(Context.Request.Query["sentiment"] == "Negative")">Negative</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Review Date</label>
                    <input type="date" 
                        class="form-control modern-input" 
                        name="date"
                        value="@Context.Request.Query["date"]" />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-gradient w-100">
                        <i class="fa fa-search me-2"></i> Filter
                    </button>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <a asp-action="Index" class="btn btn-outline-secondary w-100">
                        <i class="fa fa-refresh me-2"></i> Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Reviews Table -->
    <div class="modern-card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>
                Reviews Overview
            </h5>
        </div>

        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-modern mb-0">
                    <thead>
                        <tr>
                            <th>
                                <i class="fas fa-gamepad me-2"></i>Game
                            </th>
                            <th>
                                <i class="fas fa-comment me-2"></i>Review Content
                            </th>
                            <th class="text-center">
                                <i class="fas fa-chart-line me-2"></i>Sentiment
                            </th>
                            <th class="text-center">
                                <i class="fas fa-percentage me-2"></i>Confidence
                            </th>
                            <th>
                                <i class="fas fa-link me-2"></i>Source
                            </th>
                            <th>
                                <i class="fas fa-calendar me-2"></i>Date
                            </th>
                            <th class="text-center">
                                <i class="fas fa-cogs me-2"></i>Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var review in Model)
                        {
                            <tr class="table-row-hover">
                                <!-- Game name -->
                                <td>
                                    <div class="review-game">
                                        <span class="fw-bold text-primary">@review.AppName</span>
                                    </div>
                                </td>

                                <!-- Excerpt of review -->
                                <td>
                                    <div class="review-content">
                                        @if (!string.IsNullOrEmpty(review.ReviewText) && review.ReviewText.Length > 80)
                                        {
                                            <span class="review-text">@($"{review.ReviewText.Substring(0, 80)}...")</span>
                                            <button class="btn btn-link btn-sm p-0 ms-1 text-primary" onclick="toggleReviewText(this)" data-full-text="@review.ReviewText">
                                                <i class="fas fa-expand-alt"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="review-text">@review.ReviewText</span>
                                        }
                                    </div>
                                </td>

                                <!-- Sentiment -->
                                <td class="text-center">
                                    @if (review.Sentiment == "Positive")
                                    {
                                        <span class="badge bg-success sentiment-badge">
                                            <i class="fas fa-thumbs-up me-1"></i>Positive
                                        </span>
                                    }
                                    else if (review.Sentiment == "Negative")
                                    {
                                        <span class="badge bg-danger sentiment-badge">
                                            <i class="fas fa-thumbs-down me-1"></i>Negative
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark sentiment-badge">
                                            <i class="fas fa-minus me-1"></i>Neutral
                                        </span>
                                    }
                                </td>

                                <!-- Confidence score -->
                                <td class="text-center">
                                    <div class="confidence-score">
                                        <span class="fw-bold text-info">@(Math.Round((review.SentimentConfidence ?? 0) * 100, 1))%</span>
                                        <div class="progress mt-1" style="height: 4px;">
                                            <div class="progress-bar bg-info" style="width: @(Math.Round((review.SentimentConfidence ?? 0) * 100, 0))%"></div>
                                        </div>
                                    </div>
                                </td>

                                <!-- Source (from Games table) -->
                                <td>
                                    <span class="badge bg-light text-dark border">
                                        <i class="fas fa-external-link-alt me-1"></i>@review.Source
                                    </span>
                                </td>

                                <!-- Review Date -->
                                <td class="text-muted">@review.ReviewDate?.ToString("MMM dd, yyyy")</td>

                                <!-- Action buttons -->
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <button class="btn btn-outline-primary btn-sm" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#viewReviewModal" 
                                                onclick="viewReview(@review.ReviewId)">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="btn btn-outline-warning btn-sm" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editReviewModal" 
                                                onclick="editReview(@review.ReviewId)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#deleteReviewModal" 
                                                onclick="deleteReview(@review.ReviewId)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            </div>
        </div>
    </div>
</div>

<!-- Modal Container -->
<div class="modal fade" id="modalContainer" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content"></div>
    </div>
</div>

@section Scripts {
<style>
    /* Modern Card Styling */
    .modern-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.05);
        overflow: hidden;
        transition: all 0.3s ease;
    }
    
    .modern-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);
    }
    
    .modern-card .card-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 1.5rem;
        font-weight: 600;
    }
    
    /* Modern Input Styling */
    .modern-input {
        border: 2px solid rgba(102, 126, 234, 0.1);
        border-radius: 12px;
        padding: 12px 16px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }
    
    .modern-input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        background: white;
    }
    
    /* Button Styling */
    .btn-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
        padding: 12px 24px;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .btn-gradient:hover {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        color: white;
    }
    
    .btn-modern {
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .btn-modern:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
    
    /* Table Styling */
    .table-modern {
        border: none;
    }
    
    .table-modern thead th {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        border: none;
        padding: 1.5rem 1rem;
        font-weight: 600;
        color: #475569;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
    }
    
    .table-modern tbody td {
        padding: 1.25rem 1rem;
        border: none;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        vertical-align: middle;
    }
    
    .table-row-hover:hover {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        transform: scale(1.01);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    /* Review Content Styling */
    .review-content {
        max-width: 300px;
    }
    
    .review-text {
        display: block;
        line-height: 1.4;
        color: #475569;
    }
    
    .review-game span {
        color: #1e293b;
    }
    
    /* Sentiment Badge Styling */
    .sentiment-badge {
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        font-weight: 600;
    }
    
    /* Confidence Score Styling */
    .confidence-score {
        min-width: 80px;
    }
    
    .progress {
        background-color: rgba(102, 126, 234, 0.1);
    }
    
    /* Form Labels */
    .form-label {
        font-weight: 600;
        color: #475569;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }
    
    /* Badge Styling */
    .badge {
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        font-weight: 600;
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .dashboard-header {
            padding: 1.5rem;
        }
        
        .dashboard-title {
            font-size: 1.8rem;
        }
        
        .table-responsive {
            border-radius: 0;
        }
        
        .btn-group .btn {
            padding: 0.25rem 0.5rem;
        }
        
        .review-content {
            max-width: 200px;
        }
    }
</style>

<script>
    // Toggle review text expansion
    function toggleReviewText(button) {
        const reviewText = button.parentElement.querySelector('.review-text');
        const fullText = button.getAttribute('data-full-text');
        const icon = button.querySelector('i');
        
        if (icon.classList.contains('fa-expand-alt')) {
            reviewText.textContent = fullText;
            icon.classList.remove('fa-expand-alt');
            icon.classList.add('fa-compress-alt');
        } else {
            reviewText.textContent = fullText.substring(0, 80) + '...';
            icon.classList.remove('fa-compress-alt');
            icon.classList.add('fa-expand-alt');
        }
    }
    
    // Modal handlers
    $(document).on("click", "[data-bs-toggle='ajax-modal']", function (e) {
        e.preventDefault();
        var url = $(this).attr("href");
        $.get(url).done(function (data) {
            $("#modalContainer .modal-content").html(data);
            var modal = new bootstrap.Modal(document.getElementById("modalContainer"));
            modal.show();
        });
    });
    
    // Review action functions
    function viewReview(id) {
        var url = '/Reviews/Details/' + id;
        $.get(url).done(function (data) {
            $("#modalContainer .modal-content").html(data);
            var modal = new bootstrap.Modal(document.getElementById("modalContainer"));
            modal.show();
        }).fail(function(xhr) {
            alert("Error loading review details: " + (xhr.responseText || xhr.statusText));
        });
    }
    
    function editReview(id) {
        var url = '/Reviews/Edit/' + id;
        $.get(url).done(function (data) {
            $("#modalContainer .modal-content").html(data);
            var modal = new bootstrap.Modal(document.getElementById("modalContainer"));
            modal.show();
        }).fail(function(xhr) {
            alert("Error loading edit form: " + (xhr.responseText || xhr.statusText));
        });
    }
    
    
    function deleteReview(id) {
        if (confirm('Are you sure you want to delete this review?')) {
            alert('Delete functionality not yet implemented. Please contact administrator.');
            // TODO: Implement delete action in ReviewsController
            // $.ajax({
            //     url: '/Reviews/Delete/' + id,
            //     type: 'POST',
            //     success: function(response) {
            //         location.reload();
            //     },
            //     error: function() {
            //         alert("Error deleting review.");
            //     }
            // });
        }
    }
    
    // Handle modal form submissions (for Edit)
    $(document).on("submit", "#modalContainer form", function(e) {
        e.preventDefault();
        var form = $(this);

        $.ajax({
            type: form.attr("method"),
            url: form.attr("action"),
            data: form.serialize(),
            success: function(response) {
                // Close modal and reload page
                var modalEl = document.getElementById("modalContainer");
                var modal = bootstrap.Modal.getInstance(modalEl);
                if (modal) {
                    modal.hide();
                }
                location.reload();
            },
            error: function(xhr) {
                alert("Error saving review: " + (xhr.responseText || xhr.statusText));
            }
        });
    });
</script>
}


