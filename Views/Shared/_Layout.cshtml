<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AmazonReviewsCRM</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/AmazonReviewsCRM.styles.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            background-color: #F6FAFD;
        }
        .sidebar {
            height: 100vh;
            width: 220px;
            position: fixed;
            left: 0;
            top: 0;
            background: #14213d;
            color: white;
            padding-top: 1rem;
        }
        .sidebar a {
            color: white;
            display: block;
            padding: 0.75rem 1rem;
            text-decoration: none;
        }
        .sidebar a:hover {
            background: rgba(255,255,255,0.2);
        }
        .content {
            margin-left: 220px;
            padding: 2rem;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <h4 class="text-center mb-4">📊 CRM</h4>
        @* <a href="/reviewers/"><i class="fa fa-gamepad me-2"></i> Reviewers</a> *@
        <a href="/dashboard/" data-menu-key="Dashboard"><i class="fa fa-home me-2"></i> Dashboard</a>
        <a href="/games/" data-menu-key="games"><i class="fa fa-gamepad me-2"></i> Games</a>
        <a href="/reviews/" data-menu-key="reviews"><i class="fa fa-star me-2"></i> Reviews</a>
        <a href="/trends/" data-menu-key="trends"><i class="fa fa-star me-2"></i> Trends</a>
        <a href="/alerts/" data-menu-key="Alerts"><i class="fa fa-cog me-2"></i> Alerts</a>
        <a href="/model/" data-menu-key="model"><i class="fa fa-gamepad me-2"></i> Model</a>
        <a href="/reports/" data-menu-key="Reports"><i class="fa fa-star me-2"></i> Reports</a>
        <a href="/usermanagement/"><i class="class="fa fa-star me-2"></i> User Management</a>
        <a href="/admin/" data-menu-key="admin"><i class="fa fa-cog me-2"></i> Settings</a>

        <a href="#" id="logout-link"><i class="fa fa-sign-out-alt me-2"></i> Logout</a>

    </div>

    <!-- Main content -->
    <div class="content">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>

        <footer class="border-top footer text-muted mt-4">
            <div class="container">
                &copy; 2025 - AmazonReviewsCRM -
                <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            </div>
        </footer>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
<script>
    document.addEventListener('DOMContentLoaded', async function() {
        const token = localStorage.getItem('jwt');
        if (!token) {
            window.location.href = '/';
            return;
        }

        try {
            const response = await fetch('/api/auth/me', {
                headers: { 'Authorization': 'Bearer ' + token }
            });
            if (!response.ok) throw new Error('Failed to get user info');

            const data = await response.json();
            const menuKeys = data.menuKeys; // array of allowed pages

            // Hide links that the role does not have access to
            @* document.querySelectorAll('.sidebar a[data-menu-key]').forEach(link => {
                const key = link.dataset.menuKey;
                if (!menuKeys.includes(key)) {
                    link.style.display = 'none';
                }
            }); *@
        } catch (err) {
            console.error(err);
        }
    });


    function parseJwt(token) {
        try {
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            return JSON.parse(atob(base64));
        } catch (e) {
            return null;
        }
    }

    // Logout Function
const logoutLink = document.getElementById('logout-link');

    if (logoutLink) {
        logoutLink.addEventListener('click', async function (e) {
            e.preventDefault();

            try {
                localStorage.removeItem('jwt');

                window.location.href = '/';
            } catch (error) {
                console.error('Logout failed:', error);
                alert('Logout failed. Please try again.');
            }
        });
    }

</script>

</body>

</html>
